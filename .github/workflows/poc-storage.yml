---
name: 'OPI Storage PoC CI'

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository_owner }}/opi-spdk

concurrency:
  # if workflow for PR or push is already running stop it, and start new one
  group: poc-storage-${{ github.ref }}
  cancel-in-progress: true

jobs:
  storage-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package:
          - server
          - client
    steps:
    - uses: actions/checkout@v3
    - uses: docker/setup-qemu-action@v2
    - uses: docker/setup-buildx-action@39a1a82492fd1ad19af19d61b5f748e4cb6cd1af

    - name: Log into registry ${{ env.REGISTRY }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@57396166ad8aefe6098280995947635806a0e6ea
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/opi-storage-${{ matrix.package }}

    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@ffe65bfc276d2ef003d5ea483a9947a8f6d408da
      with:
        context: ${{ matrix.package }}
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  docker-build:
    runs-on: ubuntu-latest
    steps:
    - name: configure HUGE pages
      run: |
        sync
        echo 1 | sudo tee /proc/sys/vm/drop_caches
        sudo mkdir -p /mnt/huge
        grep hugetlbfs /proc/mounts || sudo mount -t hugetlbfs nodev /mnt/huge
        echo 1024 | sudo tee /proc/sys/vm/nr_hugepages
        echo "Check and fail if not enough"
        grep 1024 /sys/kernel/mm/hugepages/hugepages-2048kB/nr_hugepages

    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    # Workaround: https://github.com/docker/build-push-action/issues/461
    - name: Setup Docker buildx
      uses: docker/setup-buildx-action@39a1a82492fd1ad19af19d61b5f748e4cb6cd1af

    # Login against a Docker registry except on PR
    # https://github.com/docker/login-action
    - name: Log into registry ${{ env.REGISTRY }}
      uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # Extract metadata (tags, labels) for Docker
    # https://github.com/docker/metadata-action
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@57396166ad8aefe6098280995947635806a0e6ea
      with:
        sep-tags: ","
        sep-labels: ","
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        # Docker tags based on the following events/attributes
        tags: |
          type=schedule
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=sha

    # Build and push Docker image with Buildx
    # https://github.com/docker/build-push-action
    - name: Build Docker image
      id: build
      uses: docker/build-push-action@ffe65bfc276d2ef003d5ea483a9947a8f6d408da
      with:
        context: spdk
        push: false
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        outputs: type=docker,dest=/tmp/myimage.tar
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Load docker image locally
      run: docker image load < /tmp/myimage.tar

    - name: List docker images
      run: docker image ls

    - name: Start containers
      run: SPDK_TAG=sha-$(git rev-parse --short ${{ github.sha }}) ./scripts/poc.sh start

    - name: Run Tests
      run: SPDK_TAG=sha-$(git rev-parse --short ${{ github.sha }}) ./scripts/poc.sh tests

    - name: Logs
      if: failure()
      run: ./scripts/poc.sh logs

    - name: Stop containers
      if: always()
      run: ./scripts/poc.sh stop

    - name: Upload build artifact
      if: github.event_name == 'pull_request'
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.os }}-${{ steps.system.outputs.arch }}
        path: /tmp/myimage.tar
        retention-days: 1

    # Build and push Docker image with Buildx
    # https://github.com/docker/build-push-action
    # NOTE: The second time we run this, the iamge should already be
    # built, and we're just doing the push to ghcr.io
    - name: Push Docker image
      id: push-to-ghcr
      uses: docker/build-push-action@ffe65bfc276d2ef003d5ea483a9947a8f6d408da
      if: github.event_name != 'pull_request'
      with:
        context: spdk
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
