---
name: 'OPI Storage PoC CI'

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io

concurrency:
  # if workflow for PR or push is already running stop it, and start new one
  group: poc-storage-${{ github.ref }}
  cancel-in-progress: true

jobs:
  storage-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package:
          - server
          - client
          - spdk
    steps:
    - uses: actions/checkout@v3
    - uses: docker/setup-qemu-action@v2
    - uses: docker/setup-buildx-action@15c905b16b06416d2086efa066dd8e3a35cc7f98

    - name: Log into registry ${{ env.REGISTRY }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@3da7dc6e2b31f99ef2cb9fb4c50fb0971e0d0139
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@6c3ca5dfa6895029f82e5b2f26f060bc0d3c6a2c
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/opi-storage-${{ matrix.package }}

    - name: Build and push Docker image
      if: matrix.package != 'spdk'
      uses: docker/build-push-action@55a34859132125dc0090064b58371f30aa53395a
      with:
        context: .
        file: cmd/${{matrix.package}}/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push Docker image
      if: matrix.package == 'spdk'
      uses: docker/build-push-action@55a34859132125dc0090064b58371f30aa53395a
      with:
        context: ${{ matrix.package }}
        platforms: linux/amd64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  storage-ci:
    runs-on: ubuntu-latest
    steps:
    - name: configure HUGE pages
      run: |
        sync
        echo 1 | sudo tee /proc/sys/vm/drop_caches
        sudo mkdir -p /mnt/huge
        grep hugetlbfs /proc/mounts || sudo mount -t hugetlbfs nodev /mnt/huge
        echo 1024 | sudo tee /proc/sys/vm/nr_hugepages
        echo "Check and fail if not enough"
        grep 1024 /sys/kernel/mm/hugepages/hugepages-2048kB/nr_hugepages

    - uses: actions/checkout@v3
    - uses: docker/setup-qemu-action@v2
    - uses: docker/setup-buildx-action@15c905b16b06416d2086efa066dd8e3a35cc7f98

    - name: Start containers
      run: SPDK_TAG=sha-$(git rev-parse --short ${{ github.sha }}) ./scripts/poc.sh start

    - name: Run Tests
      run: SPDK_TAG=sha-$(git rev-parse --short ${{ github.sha }}) ./scripts/poc.sh tests

    - name: Logs
      if: failure()
      run: ./scripts/poc.sh logs

    - name: Stop containers
      if: always()
      run: ./scripts/poc.sh stop
